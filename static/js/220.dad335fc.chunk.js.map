{"version":3,"file":"static/js/220.dad335fc.chunk.js","mappings":"wMAEaA,EAAQC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iXACnB,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,OAAOC,cAAc,IACtC,SAAAC,GAAQ,OAAAA,EAALH,MAAkBI,UAAU,GAAG,IAChC,SAAAC,GAAQ,OAAAA,EAALL,MAAkBM,YAAYC,QAAQ,IACzC,SAAAC,GAAQ,OAAAA,EAALR,MAAkBS,YAAY,EAAI,IAKrC,SAAAC,GAAQ,OAAAA,EAALV,MAAkBI,UAAU,GAAG,IAKlC,SAAAO,GAAQ,OAAAA,EAALX,MAAkBI,UAAU,GAAG,IAKtCQ,EAAiBhB,EAAAA,EAAAA,IAAUiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,uXASxB,SAAAgB,GAAQ,OAAAA,EAALd,MAAkBC,OAAOc,WAAW,IAc1CC,GAAkBpB,EAAAA,EAAAA,GAAOgB,EAAPhB,CAAsBqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,kNAexCoB,EAAStB,EAAAA,EAAAA,IAAUuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,kZAShB,SAAAsB,GAAQ,OAAAA,EAALpB,MAAkBC,OAAOC,cAAc,IAgB7CmB,EAAUzB,EAAAA,EAAAA,QAAc0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,6M,SCjErC,EAXkB,SAAHC,GAAmB,IAAbwB,EAAKxB,EAALwB,MACnB,OACEC,EAAAA,EAAAA,MAACH,EAAO,CAAAI,SAAA,EACNC,EAAAA,EAAAA,KAAC/B,EAAK,CAAA8B,SAAEF,KACRG,EAAAA,EAAAA,KAACd,EAAc,KACfc,EAAAA,EAAAA,KAACV,EAAe,KAChBU,EAAAA,EAAAA,KAACR,EAAM,MAGb,C,wdCfaS,EAAiB/B,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kJAS3B8B,EAAOhC,EAAAA,EAAAA,EAAQiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,uRAEjB,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,OAAO4B,eAAe,IACvC,SAAA1B,GAAQ,OAAAA,EAALH,MAAkBI,UAAU,GAAG,IAChC,SAAAC,GAAQ,OAAAA,EAALL,MAAkBM,YAAYwB,MAAM,IACvC,SAAAtB,GAAQ,OAAAA,EAALR,MAAkBS,YAAY,EAAE,IAMnC,SAAAC,GAAQ,OAAAA,EAALV,MAAkBI,UAAU,GAAG,I,SCInD,EAnBuB,SAAHL,GAAsB,IAAhB0B,EAAQ1B,EAAR0B,SACxB,OACED,EAAAA,EAAAA,MAACG,EAAc,CAAAF,SAAA,EACbD,EAAAA,EAAAA,MAAA,WAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UACEK,OAAM,GAAAC,OAAKC,EAAc,SAAAD,OAAQE,EAAgB,OACjDC,MAAM,wBAERT,EAAAA,EAAAA,KAAA,UACEK,OAAM,GAAAC,OAAKI,EAAc,SAAAJ,OAAQK,EAAgB,OACjDF,MAAM,wBAERT,EAAAA,EAAAA,KAAA,OAAKY,IAAKF,EAAgBG,IAAI,kBAEhCb,EAAAA,EAAAA,KAACE,EAAI,CAAAH,SAAEA,MAGb,C,yJCtBae,EAAQ5C,EAAAA,EAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,irBAKX,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,OAAOwC,kBAAkB,IAExD,SAAAtC,GAAQ,OAAAA,EAALH,MAAkB0C,QAAQC,iBAAiB,IAC/C,SAAAtC,GAAQ,OAAAA,EAALL,MAAkBC,OAAO2C,gBAAgB,IACxC,SAAApC,GAAQ,OAAAA,EAALR,MAAkBI,UAAU,GAAG,IAChC,SAAAM,GAAQ,OAAAA,EAALV,MAAkBS,YAAY,GAAI,IAElC,SAAAE,GAAQ,OAAAA,EAALX,MAAkB6C,WAAWC,kBAAkB,IAChE,SAAAhC,GAAQ,OAAAA,EAALd,MAAkB6C,WAAWE,cAAc,IAKtC,SAAA3B,GAAQ,OAAAA,EAALpB,MAAkB0C,QAAQM,sBAAsB,IAKpD,SAAAC,GAAQ,OAAAA,EAALjD,MAAkBkD,aAAaC,gBAAgB,IAM9C,SAAAC,GAAQ,OAAAA,EAALpD,MAAkBI,UAAU,GAAG,IAChC,SAAAiD,GAAQ,OAAAA,EAALrD,MAAkBS,YAAY,GAAI,IAMvC,SAAA6C,GAAQ,OAAAA,EAALtD,MAAkBI,UAAU,GAAG,IAGtCmD,EAAe3D,EAAAA,EAAAA,IAAUiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,2DAKzB0D,EAAgB5D,EAAAA,EAAAA,IAAUqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,yD,2DCqHvC,EAhJmB,WACjB,IAAA2D,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC7BC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAIP,EAASQ,OAAiC,UAAxBR,EAASQ,MAAMC,KAAkB,CACrD,IAAMC,EAAQd,EAAae,IAAI,KAC/BnB,EAAekB,EACjB,CAEF,GAAG,IAEH,IAAME,GAAoBC,EAAAA,EAAAA,cAAY,WAKpC,GAJ0B,YAAtBb,EAASc,UAA0C,KAAhBvB,GACrCM,EAAgB,CAAC,GAGO,YAAtBG,EAASc,UAA0C,KAAhBvB,EACrC,OAAQW,GACN,IAAK,QACHL,EAAgB,CAAEkB,EAAGxB,IACrB,MACF,IAAK,aACHM,EAAgB,CAAEmB,IAAKzB,IAM/B,GAAG,CAACS,EAASc,SAAUvB,EAAaW,EAAgBL,KAEpDU,EAAAA,EAAAA,YAAU,WACRK,GACF,GAAG,CAACA,IAuDJ,OACExD,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAM6D,SAlDW,SAAAC,GAInB,GAHAA,EAAEC,iBACFd,GAASe,EAAAA,EAAAA,OAEiB,UAAtBpB,EAASc,UAAwC,KAAhBvB,EAKnC,OAJAc,GAASgB,EAAAA,EAAAA,GAAa,eACtBvB,EAAS,aAADpC,OAAc6B,GAAe,CACnCiB,MAAO,CAAEC,KAAM,WAKnB,IAAMa,EAASC,OAAOC,YAAY5B,EAAa6B,WACvCV,EAAWO,EAAXP,EAAGC,EAAQM,EAARN,IAEL/D,EAAQ2C,EAAae,IAAI,KACzBe,EAAa9B,EAAae,IAAI,OAEpC,GAAoB,KAAhBpB,EAGF,OAFAM,EAAgB,CAAC,QACjB8B,EAAAA,EAAAA,GAAiB,qBAIfZ,GAAW,KAANA,IACPV,GAASuB,EAAAA,EAAAA,OACTvB,GAASwB,EAAAA,EAAAA,GAAkB5E,IAAQ6E,MAAK,SAAAC,GAAW,IAADC,EAAAC,EAEtB,MAAxBF,EAAOG,QAAQC,MACyB,KAArB,QAAnBH,EAAAD,EAAOG,QAAQE,YAAI,IAAAJ,GAAQ,QAARC,EAAnBD,EAAqBK,cAAM,IAAAJ,OAAR,EAAnBA,EAA6BK,UAE7BX,EAAAA,EAAAA,GAAiB,eAADjE,OAAgBT,EAAK,mBAEzC,KAEE+D,GAAe,KAARA,IACTX,GAASkC,EAAAA,EAAAA,OACTlC,GAASmC,EAAAA,EAAAA,GAAuBd,IAAaI,MAAK,SAAAC,GAAW,IAADU,EAAAC,EAEhC,MAAxBX,EAAOG,QAAQC,MACyB,KAArB,QAAnBM,EAAAV,EAAOG,QAAQE,YAAI,IAAAK,GAAQ,QAARC,EAAnBD,EAAqBJ,cAAM,IAAAK,OAAR,EAAnBA,EAA6BJ,UAE7BX,EAAAA,EAAAA,GAAiB,eAADjE,OAAgBgE,EAAU,mBAE9C,IAEJ,EAIiCvE,UAC3BD,EAAAA,EAAAA,MAAC+B,EAAY,CAAA9B,SAAA,EACXC,EAAAA,EAAAA,KAACc,EAAK,CACJyE,KAAK,OACLC,KAAK,SACLC,MAAOtD,EACPuD,SA7DgB,SAAA5B,GACxB,IAAM6B,EAAY7B,EAAE8B,OAAOH,MAAMI,OACjCzD,EAAeuD,EACjB,EA2DUG,YAAY,iBACZC,aAAa,SAEf/F,EAAAA,EAAAA,KAAC8B,EAAa,CAAA/B,UACZC,EAAAA,EAAAA,KAACgG,EAAAA,EAAU,CACTC,WAAW,SACXC,SAAS,OACTC,QAAS,CACPC,WAAY,SACZC,cAAe,SACfC,YAAa,OACbC,aAAc,QAEhBC,cAAe,CACbC,KAAM,IACNC,KAAM,KACNC,KAAM,MAERC,eAAgB,CACdH,KAAM,IACNC,KAAM,KACNC,KAAM,MAERE,QACwB,MAAtBjE,EAASc,SACL,iCACA,UAENoD,YAAa,CAAEC,WAAY,oBAC3BC,YAAa,CACXC,WACwB,MAAtBrE,EAASc,SACL,UACA,4CAQtB,C,iJC/Ja/D,EAAUzB,EAAAA,EAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yR,SCWrC,EATkB,WAChB,OACE0B,EAAAA,EAAAA,MAACH,EAAO,CAAAI,SAAA,EACNC,EAAAA,EAAAA,KAACkH,EAAAA,EAAU,KACXlH,EAAAA,EAAAA,KAACmH,EAAAA,EAAkB,MAGzB,E,oGCTaC,EAAmBlJ,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iOAG1B,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,OAAO8I,gBAAgB,IAS/CC,EAAcpJ,EAAAA,EAAAA,OAAaiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,8NAe3BmJ,EAAOrJ,EAAAA,EAAAA,IAAUqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,iOAGpB,SAAAK,GAAQ,OAAAA,EAALH,MAAkBkD,aAAagG,YAAY,IAG5C,SAAA7I,GAAQ,OAAAA,EAALL,MAAkBkD,aAAaiG,iBAAiB,IAInD,SAAA3I,GAAQ,OAAAA,EAALR,MAAkBkD,aAAakG,oBAAoB,IAGpD,SAAA1I,GAAQ,OAAAA,EAALV,MAAkBkD,aAAaiG,iBAAiB,IAMpDE,EAAezJ,EAAAA,EAAAA,OAAauB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,wbAK1B,SAAAa,GAAQ,OAAAA,EAALX,MAAkBI,UAAU,GAAG,IACtC,SAAAU,GAAQ,OAAAA,EAALd,MAAkBC,OAAOqJ,0BAA0B,IAG3C,SAAAlI,GAAA,IAAGmI,EAAQnI,EAARmI,SAAUvJ,EAAKoB,EAALpB,MAAK,OACpCuJ,EAAWvJ,EAAMC,OAAOuJ,uBAAyB,aAAa,IAE1C,SAAAvG,GAAQ,OAAAA,EAALjD,MAAkBC,OAAOuJ,sBAAsB,I,UC0E1E,EA1HkB,SAAHzJ,GAA8C,IAAxC2G,EAAI3G,EAAJ2G,KAAM+C,EAAY1J,EAAZ0J,aAAcC,EAAY3J,EAAZ2J,aACvCjG,GAAkDC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvDkG,EAAiBhG,EAAA,GAAEiG,EAAoBjG,EAAA,GACxCkG,GAAcpF,EAAAA,EAAAA,IAAYqF,EAAAA,IAE1BC,EAAYC,KAAKC,KAAKvD,EAAKE,OAAS6C,GAEpCS,GAA0B/E,EAAAA,EAAAA,cAAY,WAC1C,IAAMgF,EAAcC,OAAOC,WAEzBT,EADEO,GAAe,IACI,EAEA,GAEzB,GAAG,KAEHtF,EAAAA,EAAAA,YAAU,WAGR,OAFAqF,IACAE,OAAOE,iBAAiB,SAAUJ,GAC3B,WACLE,OAAOG,oBAAoB,SAAUL,EACvC,CACF,GAAG,CAACA,IAEJ,IAAMM,GAAmBrF,EAAAA,EAAAA,cACvB,SAAAsF,GACMA,GAAc,GAAKA,GAAcV,GACnCL,EAAae,EAEjB,GACA,CAACf,EAAcK,KAGjBlF,EAAAA,EAAAA,YAAU,WACJgF,EAAcE,GAChBL,EAAa,EAEjB,GAAG,CAACG,EAAaE,EAAWL,IA+D5B,OACElI,EAAAA,EAAAA,MAACsH,EAAgB,CAAArH,SAAA,EACfC,EAAAA,EAAAA,KAACsH,EAAW,CACV0B,QAAS,kBAAMF,EAAiBX,EAAc,EAAE,EAChDc,SAA0B,IAAhBd,EAAkBpI,UAE5BC,EAAAA,EAAAA,KAACuH,EAAI,CAAC0B,SAA0B,IAAhBd,EAAkBpI,UAChCC,EAAAA,EAAAA,KAAA,OAAKkJ,KAAI,GAAA5I,OAAK6I,EAAAA,EAAM,qBApEE,WAC5B,IAEIC,EACAC,EAHEC,EAAkB,GAKxB,GAAIjB,GAAaJ,EACfmB,EAAY,EACZC,EAAUhB,MACL,CACL,IAAMkB,EAAsBjB,KAAKkB,OAAOvB,EAAoB,GAAK,IAEjEoB,GADAD,EAAYd,KAAKmB,IAAItB,EAAcoB,EAAqB,IAClCtB,EAAoB,GAE5BI,IAEZe,GADAC,EAAUhB,GACYJ,EAAoB,EAE9C,CAEImB,EAAY,GACdE,EAAgBI,MACd1J,EAAAA,EAAAA,KAAC2H,EAAY,CAAqBgC,UAAU,kBAAkBV,UAAQ,EAAAlJ,SAAC,OAArD,kBAMtB,IAFC,IAAA6J,EAAA,SAEQC,GACPP,EAAgBI,MACd1J,EAAAA,EAAAA,KAAC2H,EAAY,CAEXqB,QAAS,kBAAMF,EAAiBe,EAAE,EAClChC,SAAUM,IAAgB0B,EAAE9J,SAE3B8J,GAJIA,GAMP,EATKA,EAAIT,EAAWS,EAAIR,EAASQ,IAAKD,EAAjCC,GA8BT,OAlBIR,EAAUhB,GACZiB,EAAgBI,MACd1J,EAAAA,EAAAA,KAAC2H,EAAY,CAAsBgC,UAAU,kBAAkBV,UAAQ,EAAAlJ,SAAC,OAAtD,mBAMtBuJ,EAAgBI,MACd1J,EAAAA,EAAAA,KAAC2H,EAAY,CAEXqB,QAAS,kBAAMF,EAAiBT,EAAU,EAC1CR,SAAUM,IAAgBE,EAAUtI,SAEnCsI,GAJIA,IAQFiB,CACT,CAYKQ,IACD9J,EAAAA,EAAAA,KAACsH,EAAW,CACV0B,QAAS,kBAAMF,EAAiBX,EAAc,EAAE,EAChDc,SAAUd,IAAgBE,EAAUtI,UAEpCC,EAAAA,EAAAA,KAACuH,EAAI,CAAC0B,SAAUd,IAAgBE,EAAUtI,UACxCC,EAAAA,EAAAA,KAAA,OAAKkJ,KAAI,GAAA5I,OAAK6I,EAAAA,EAAM,wBAK9B,E,oBClIaxJ,EAAUzB,EAAAA,EAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gQAexB2L,EAAO7L,EAAAA,EAAAA,GAASiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,2bC8H7B,EA9G4B,WAAO,IAADC,EAC1B2L,GAAejH,EAAAA,EAAAA,IAAYkH,EAAAA,IAC3BC,GAAoBnH,EAAAA,EAAAA,IAAYoH,EAAAA,IAChChC,GAAcpF,EAAAA,EAAAA,IAAYqF,EAAAA,IAC1BgC,GAAYrH,EAAAA,EAAAA,IAAYsH,EAAAA,IACxBC,GAAQvH,EAAAA,EAAAA,IAAYwH,EAAAA,IAE1BxI,GAAsCC,EAAAA,EAAAA,UAAS0G,OAAOC,YAAW1G,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1DyI,EAAWvI,EAAA,GAAEwI,EAAcxI,EAAA,GAClCyI,GAA4C1I,EAAAA,EAAAA,UAAS,IAAG2I,GAAAzI,EAAAA,EAAAA,GAAAwI,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAExCtI,GAAuBC,EAAAA,EAAAA,MAAhBE,GAAiCN,EAAAA,EAAAA,GAAAG,EAAA,GAArB,GACbO,GAAWC,EAAAA,EAAAA,MACXI,GAAWC,EAAAA,EAAAA,MAEX4H,GAAUC,EAAAA,EAAAA,QAAO,OAGvB5H,EAAAA,EAAAA,YAAU,WACJmH,IAAOU,EAAAA,EAAAA,GAAeV,EAC5B,GAAG,CAACA,KAEJnH,EAAAA,EAAAA,YAAU,WACR,GAAIP,EAASQ,OAAiC,UAAxBR,EAASQ,MAAMC,KAAkB,CACrD,IACQM,EADOQ,OAAOC,YAAY5B,EAAa6B,WACvCV,EACF9D,EAAQ2C,EAAae,IAAI,KAC3BI,GAAW,KAANA,IACPV,GAASe,EAAAA,EAAAA,OACTf,GAASuB,EAAAA,EAAAA,OACTvB,GAASwB,EAAAA,EAAAA,GAAkB5E,IAE/B,CAEF,GAAG,KAEHoL,EAAAA,EAAAA,kBAAgB,WACd,IAAMC,EAAe,WACnBT,EAAe/B,OAAOC,WACxB,EAEA,OADAD,OAAOE,iBAAiB,SAAUsC,GAC3B,WACLxC,OAAOG,oBAAoB,SAAUqC,EACvC,CACF,GAAG,IAEH,IAAMC,GAAoB1H,EAAAA,EAAAA,cAAY,WACpC,IAAI2H,GACU,OAAZpB,QAAY,IAAZA,OAAY,EAAZA,EAAc9E,QAAS,EAAI8E,EAAgC,OAAjBE,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBmB,KAAI,SAAAxB,GAAC,OAAIA,CAAC,IACzEgB,EAAkBO,EACpB,GAAG,CAACpB,EAAcE,KAElB/G,EAAAA,EAAAA,YAAU,WACRgI,GACF,GAAG,CAACA,IAEJ,IAAMrC,GAAmBrF,EAAAA,EAAAA,cACvB,SAAAsF,GAAe,IAADuC,EACZrI,GAASsI,EAAAA,EAAAA,IAAexC,IACT,QAAfuC,EAAAR,EAAQU,eAAO,IAAAF,GAAfA,EAAiBG,eAAe,CAAEC,SAAU,UAC9C,GACA,CAACzI,IAGG0I,EAAkBf,EAAegB,MAhDlB,GAiDlBzD,EAAc,GAjDI,EAkDnBA,GAGF,OACEnI,EAAAA,EAAAA,KAACL,EAAO,CAAAI,SACLqK,GACCpK,EAAAA,EAAAA,KAAC6L,EAAAA,EAAM,KAEP/L,EAAAA,EAAAA,MAAAgM,EAAAA,SAAA,CAAA/L,SAAA,CAC0D,QAAvD1B,EAACmM,GAAe,KAAOI,EAAiBe,SAAe,IAAAtN,GAAvDA,EAA0D6G,QAEzDlF,EAAAA,EAAAA,KAAC+J,EAAI,CAACgC,IAAKjB,EAAQ/K,UACfyK,GAAe,KAAOI,EAAiBe,GACtCC,MACC,EACApB,GAAe,KACX,IACCA,GAAe,KAAOI,EAAiBe,GACrCzG,QAERmG,KAAI,SAAA5M,GAAA,IAAQuN,EAAEvN,EAAPwN,IAASpM,EAAKpB,EAALoB,MAAOqM,EAAOzN,EAAPyN,QAAO,OAC7BlM,EAAAA,EAAAA,KAACmM,EAAAA,EAAiB,CAEhBH,GAAIA,EACJnM,MAAOA,EACPe,IAAKsL,GAHAF,EAIL,OAIRhM,EAAAA,EAAAA,KAACoM,EAAAA,EAAc,CAAArM,SAAC,sCAEjByK,EAAc,MAAkC,IAA1BI,EAAe1F,SACpClF,EAAAA,EAAAA,KAACqM,EAAS,CACRrH,KAAM4F,EACN7C,aArFS,EAsFTC,aAAcc,QAO5B,EC9HA,EAVmB,SAAAjJ,GACjB,OACEC,EAAAA,EAAAA,MAACwM,EAAAA,EAAa,CAAAvM,SAAA,EACZC,EAAAA,EAAAA,KAACuM,EAAAA,EAAS,CAAC1M,MAAM,YACjBG,EAAAA,EAAAA,KAACwM,EAAS,KACVxM,EAAAA,EAAAA,KAACyM,EAAmB,MAG1B,C","sources":["components/ReusableComponents/PageTitle/PageTitle.styled.jsx","components/ReusableComponents/PageTitle/PageTitle.jsx","components/ReusableComponents/SearchCap/SearchCap.styled.jsx","components/ReusableComponents/SearchCap/SearchCap.jsx","components/ReusableComponents/SearchForm/SearchForm.styled.jsx","components/ReusableComponents/SearchForm/SearchForm.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","components/Paginator/PaginatorSearch.styled.jsx","components/Paginator/PaginatorSearch.jsx","components/SearchedRecipesList/SearchedRecipesList.styled.jsx","components/SearchedRecipesList/SearchedRecipesList.jsx","pages/SearchPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  color: ${({ theme }) => theme.colors.pageTitleColor};\n  font-size: ${({ theme }) => theme.fontSizes[28]}px;\n  font-weight: ${({ theme }) => theme.fontWeights.semibold};\n  line-height: ${({ theme }) => theme.lineHeights['1']};\n  letter-spacing: -0.56px;\n  padding-bottom: 3px;\n\n  @media screen and (min-width: 768px) {\n    font-size: ${({ theme }) => theme.fontSizes[32]}px;\n    letter-spacing: -0.64px;\n    padding-bottom: 6px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: ${({ theme }) => theme.fontSizes[44]}px;\n    letter-spacing: -0.88px;\n  }\n`;\n\nexport const RectangleFirst = styled.div`\n  position: absolute;\n  top: 76px;\n  left: 104px;\n  width: 8px;\n  height: 8px;\n  transform: rotate(-25deg);\n  flex-shrink: 0;\n  border-radius: 3px;\n  background: ${({ theme }) => theme.colors.accentColor};\n\n  @media screen and (min-width: 768px) {\n    left: 187px;\n    width: 14px;\n    height: 14px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    top: 116px;\n    left: 228px;\n  }\n`;\n\nexport const RectangleSecond = styled(RectangleFirst)`\n  top: 106px;\n  left: 333px;\n\n  @media screen and (min-width: 768px) {\n    top: 89px;\n    left: 694px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    top: 129px;\n    left: 1149px;\n  }\n`;\n\nexport const Circle = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 241px;\n  width: 6px;\n  height: 6px;\n  transform: rotate(-25deg);\n  flex-shrink: 0;\n  border-radius: 3px;\n  background: ${({ theme }) => theme.colors.pageTitleColor};\n\n  @media screen and (min-width: 768px) {\n    width: 12px;\n    height: 12px;\n    border-radius: 3px;\n\n    left: 405px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    top: 200px;\n    left: 706px;\n  }\n`;\n\nexport const Section = styled.section`\n  position: relative;\n  padding-top: 114px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 136px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 164px;\n  }\n`;\n","import {\n  Section,\n  Title,\n  RectangleFirst,\n  RectangleSecond,\n  Circle,\n} from './PageTitle.styled';\n\nconst PageTitle = ({ title }) => {\n  return (\n    <Section>\n      <Title>{title}</Title>\n      <RectangleFirst />\n      <RectangleSecond />\n      <Circle />\n    </Section>\n  );\n};\n\nexport default PageTitle;\n","import styled from '@emotion/styled';\n\nexport const ImageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  max-width: 100%;\n`;\n\nexport const Text = styled.p`\n  margin-top: 24px;\n  color: ${({ theme }) => theme.colors.selectTextColor};\n  font-size: ${({ theme }) => theme.fontSizes[14]}px;\n  font-weight: ${({ theme }) => theme.fontWeights.meduim};\n  line-height: ${({ theme }) => theme.lineHeights[1]};\n  letter-spacing: -0.28px;\n  opacity: 0.5;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 32px;\n    font-size: ${({ theme }) => theme.fontSizes[24]}px;\n    letter-spacing: -0.48px;\n  }\n`;\n","import searchCapSmall from '../../../images/searchPageCap/searchCapSmall.png';\nimport searchCapSmall2x from '../../../images/searchPageCap/searchCapSmall@2x.png';\nimport searchCapLarge from '../../../images/searchPageCap/searchCapLarge.png';\nimport searchCapLarge2x from '../../../images/searchPageCap/searchCapLarge@2x.png';\n\nimport { ImageContainer, Text } from './SearchCap.styled';\n\nconst SearchCapImage = ({ children }) => {\n  return (\n    <ImageContainer>\n      <picture>\n        <source\n          srcSet={`${searchCapLarge} 1x, ${searchCapLarge2x} 2x`}\n          media=\"(min-width: 768px)\"\n        />\n        <source\n          srcSet={`${searchCapSmall} 1x, ${searchCapSmall2x} 2x`}\n          media=\"(max-width: 767px)\"\n        />\n        <img src={searchCapSmall} alt=\"vegitable\" />\n      </picture>\n      <Text>{children}</Text>\n    </ImageContainer>\n  );\n};\n\nexport default SearchCapImage;\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  width: 295px;\n  padding: 16px 32px;\n  drop-shadow: 0px 4px 97px rgba(34, 37, 42, 0.03);\n  background-color: ${({ theme }) => theme.colors.inputSearchBGColor};\n  border-radius: 24px 44px;\n  border: ${({ theme }) => theme.borders.inputSearchBorder};\n  color: ${({ theme }) => theme.colors.primaryTextColor};\n  font-size: ${({ theme }) => theme.fontSizes[12]}px;\n  line-height: ${({ theme }) => theme.lineHeights[1_2]};\n\n  transition: all ${({ theme }) => theme.transforms.transitionDuration}\n    ${({ theme }) => theme.transforms.timingFunction};\n\n  :hover,\n  :focus,\n  :active {\n    border: ${({ theme }) => theme.borders.inputSearchBorderHover};\n    outline: rgba(35, 38, 42, 0.2);\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.staticColors.placeholderColor};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 362px;\n    padding: 17px 38px;\n    font-size: ${({ theme }) => theme.fontSizes[14]}px;\n    line-height: ${({ theme }) => theme.lineHeights[1_2]};\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 510px;\n    padding: 23px 48px;\n    font-size: ${({ theme }) => theme.fontSizes[16]}px;\n  }\n`;\nexport const InputWrapper = styled.div`\n  display: inline-block;\n  position: relative;\n`;\n\nexport const ButtonWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSearchParams, useNavigate, useLocation } from 'react-router-dom';\n\nimport MainButton from '../MainButton/MainButton';\nimport { showMessageToast } from '../ToastCustom/showToast';\n\nimport { Input, InputWrapper, ButtonWrapper } from './SearchForm.styled';\n\nimport { selectSearchFilter } from '../../../redux/search/searchSelector';\nimport getRecipesByTitle from '../../../redux/search/operations/getRecipesByTitle';\nimport getRecipesByIngredient from '../../../redux/search/operations/getRecipesByIngredient';\nimport {\n  resetRecipeByTitle,\n  resetRecipeByIngredient,\n  resetCurrentPage,\n} from '../../../redux/search/searchSlice';\nimport { selectOption } from 'components/SearchTypeSelector/SearchTypeSelector';\n\nconst SearchForm = () => {\n  const [searchValue, setSearchValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const selectedOption = useSelector(selectSearchFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (location.state && location.state.from === '/main') {\n      const query = searchParams.get('q');\n      setSearchValue(query);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateQueryString = useCallback(() => {\n    if (location.pathname === '/search' && searchValue === '') {\n      setSearchParams({});\n    }\n\n    if (location.pathname === '/search' && searchValue !== '') {\n      switch (selectedOption) {\n        case 'Title':\n          setSearchParams({ q: searchValue });\n          break;\n        case 'Ingredient':\n          setSearchParams({ ing: searchValue });\n          break;\n        default:\n          break;\n      }\n    }\n  }, [location.pathname, searchValue, selectedOption, setSearchParams]);\n\n  useEffect(() => {\n    updateQueryString();\n  }, [updateQueryString]);\n\n  const handleInputChange = e => {\n    const trimvalue = e.target.value.trim();\n    setSearchValue(trimvalue);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(resetCurrentPage());\n\n    if (location.pathname === '/main' && searchValue !== '') {\n      dispatch(selectOption('Title'));\n      navigate(`/search?q=${searchValue}`, {\n        state: { from: '/main' },\n      });\n      return;\n    }\n\n    const params = Object.fromEntries(searchParams.entries());\n    const { q, ing } = params;\n\n    const title = searchParams.get('q');\n    const ingredient = searchParams.get('ing');\n\n    if (searchValue === '') {\n      setSearchParams({});\n      showMessageToast('Enter any word in');\n      return;\n    }\n\n    if (q && q !== '') {\n      dispatch(resetRecipeByIngredient());\n      dispatch(getRecipesByTitle(title)).then(result => {\n        if (\n          result.payload.code === 200 &&\n          result.payload.data?.recipe?.length === 0\n        ) {\n          showMessageToast(`On request \"${title}\" found nothing`);\n        }\n      });\n    }\n    if (ing && ing !== '') {\n      dispatch(resetRecipeByTitle());\n      dispatch(getRecipesByIngredient(ingredient)).then(result => {\n        if (\n          result.payload.code === 200 &&\n          result.payload.data?.recipe?.length === 0\n        ) {\n          showMessageToast(`On request \"${ingredient}\" found nothing`);\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <InputWrapper>\n          <Input\n            type=\"text\"\n            name=\"search\"\n            value={searchValue}\n            onChange={handleInputChange}\n            placeholder=\"Enter the text\"\n            autoComplete=\"off\"\n          />\n          <ButtonWrapper>\n            <MainButton\n              nameButton=\"Search\"\n              fontSize=\"14px\"\n              padding={{\n                paddingTop: '13.3px',\n                paddingBottom: '13.3px',\n                paddingLeft: '32px',\n                paddingRight: '32px',\n              }}\n              cofByMedia768={{\n                font: 1.2,\n                padX: 1.02,\n                padY: 1.63,\n              }}\n              cofByMedia1280={{\n                font: 1.2,\n                padX: 1.54,\n                padY: 1.63,\n              }}\n              bgColor={\n                location.pathname === '/'\n                  ? 'var(--background-color-circle)'\n                  : '#8BAA36'\n              }\n              hoverStyles={{ styleFirst: 'background-color' }}\n              hoverParams={{\n                paramFirst:\n                  location.pathname === '/'\n                    ? '#8BAA36'\n                    : 'var(--background-color-circle)',\n              }}\n            />\n          </ButtonWrapper>\n        </InputWrapper>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  text-align: center;\n  padding-top: 50px;\n  padding-bottom: 22px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 40px;\n    padding-bottom: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 50px;\n    padding-bottom: 45px;\n  }\n`;\n","import SearchForm from 'components/ReusableComponents/SearchForm';\nimport SearchTypeSelector from 'components/SearchTypeSelector';\nimport { Section } from './SearchBar.styled';\n\nconst SearchBar = () => {\n  return (\n    <Section>\n      <SearchForm />\n      <SearchTypeSelector />\n    </Section>\n  );\n};\n\nexport default SearchBar;\n","import styled from '@emotion/styled';\n\nexport const PaginationStyled = styled.div`\n  display: inline-flex;\n  border-radius: 26px;\n  background: ${({ theme }) => theme.colors.paginatorBGColor};\n  box-shadow: 0px 4px 4px 0px rgba(135, 135, 135, 0.2);\n  padding: 12px 8px;\n\n  @media and (min-width: 768px) {\n    padding: 14px 20px;\n  }\n`;\n\nexport const ArrowButton = styled.button`\n  width: 27px;\n  height: 27px;\n  padding: 5px 10px;\n  margin: 0 5px;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 8px;\n  height: 15px;\n  fill: ${({ theme }) => theme.staticColors.iconFillGrey};\n\n  &:hover {\n    fill: ${({ theme }) => theme.staticColors.iconHoverFillGrey};\n  }\n\n  &:disabled {\n    fill: ${({ theme }) => theme.staticColors.iconDisabledFillGrey};\n    cursor: not-allowed;\n    &:hover {\n      fill: ${({ theme }) => theme.staticColors.iconHoverFillGrey};\n      cursor: not-allowed;\n    }\n  }\n`;\n\nexport const NumberButton = styled.button`\n  width: 26px;\n  border: none;\n  padding: 3px 5px;\n  margin: 0 5px;\n  font-size: ${({ theme }) => theme.fontSizes[14]}px;\n  color: ${({ theme }) => theme.colors.recipeCardDescriptionColor};\n  cursor: pointer;\n  border-radius: 50%;\n  background-color: ${({ selected, theme }) =>\n    selected ? theme.colors.paginationBgHoverColor : 'transparent'};\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.paginationBgHoverColor};\n  }\n  &.ellipsis-button {\n    pointer-events: none;\n    &:hover {\n      background-color: transparent;\n    }\n\n    @media and (min-width: 768px) {\n      width: 27px;\n      padding: 5px 10px;\n    }\n  }\n`;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectCurrentPage } from '../../redux/search/searchSelector';\nimport {\n  PaginationStyled,\n  NumberButton,\n  Icon,\n  ArrowButton,\n} from './PaginatorSearch.styled';\nimport sprite from '../../images/sprite.svg';\n\nconst Paginator = ({ data, itemsPerPage, onPageChange }) => {\n  const [visiblePagesCount, setVisiblePagesCount] = useState(10);\n  const currentPage = useSelector(selectCurrentPage);\n\n  const pageCount = Math.ceil(data.length / itemsPerPage);\n\n  const updateVisiblePagesCount = useCallback(() => {\n    const screenWidth = window.innerWidth;\n    if (screenWidth <= 767) {\n      setVisiblePagesCount(6);\n    } else {\n      setVisiblePagesCount(10);\n    }\n  }, []);\n\n  useEffect(() => {\n    updateVisiblePagesCount();\n    window.addEventListener('resize', updateVisiblePagesCount);\n    return () => {\n      window.removeEventListener('resize', updateVisiblePagesCount);\n    };\n  }, [updateVisiblePagesCount]);\n\n  const handlePageChange = useCallback(\n    pageNumber => {\n      if (pageNumber >= 1 && pageNumber <= pageCount) {\n        onPageChange(pageNumber);\n      }\n    },\n    [onPageChange, pageCount]\n  );\n\n  useEffect(() => {\n    if (currentPage > pageCount) {\n      onPageChange(1);\n    }\n  }, [currentPage, pageCount, onPageChange]);\n\n  const renderPaginationItems = () => {\n    const paginationItems = [];\n\n    let startPage;\n    let endPage;\n\n    if (pageCount <= visiblePagesCount) {\n      startPage = 1;\n      endPage = pageCount;\n    } else {\n      const pagesBeforeAndAfter = Math.floor((visiblePagesCount - 2) / 2);\n      startPage = Math.max(currentPage - pagesBeforeAndAfter, 1);\n      endPage = startPage + visiblePagesCount - 3;\n\n      if (endPage > pageCount) {\n        endPage = pageCount;\n        startPage = endPage - visiblePagesCount + 3;\n      }\n    }\n\n    if (startPage > 1) {\n      paginationItems.push(\n        <NumberButton key=\"ellipsis-left\" className=\"ellipsis-button\" disabled>\n          ...\n        </NumberButton>\n      );\n    }\n\n    for (let i = startPage; i < endPage; i++) {\n      paginationItems.push(\n        <NumberButton\n          key={i}\n          onClick={() => handlePageChange(i)}\n          selected={currentPage === i}\n        >\n          {i}\n        </NumberButton>\n      );\n    }\n\n    if (endPage < pageCount) {\n      paginationItems.push(\n        <NumberButton key=\"ellipsis-right\" className=\"ellipsis-button\" disabled>\n          ...\n        </NumberButton>\n      );\n    }\n\n    paginationItems.push(\n      <NumberButton\n        key={pageCount}\n        onClick={() => handlePageChange(pageCount)}\n        selected={currentPage === pageCount}\n      >\n        {pageCount}\n      </NumberButton>\n    );\n\n    return paginationItems;\n  };\n\n  return (\n    <PaginationStyled>\n      <ArrowButton\n        onClick={() => handlePageChange(currentPage - 1)}\n        disabled={currentPage === 1}\n      >\n        <Icon disabled={currentPage === 1}>\n          <use href={`${sprite}#arrow-left`}></use>\n        </Icon>\n      </ArrowButton>\n      {renderPaginationItems()}\n      <ArrowButton\n        onClick={() => handlePageChange(currentPage + 1)}\n        disabled={currentPage === pageCount}\n      >\n        <Icon disabled={currentPage === pageCount}>\n          <use href={`${sprite}#arrow-right`}></use>\n        </Icon>\n      </ArrowButton>\n    </PaginationStyled>\n  );\n};\n\nexport default Paginator;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  text-align: center;\n  padding-top: 22px;\n  padding-bottom: 100px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 20px;\n    padding-bottom: 200px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 45px;\n  }\n`;\n\nexport const List = styled.ul`\n  align-items: center;\n  margin-bottom: 50px;\n  li {\n    margin-bottom: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 32px;\n    li {\n      margin-bottom: 0;\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    row-gap: 100px;\n    column-gap: 14px;\n  }\n`;\n","import {\n  useEffect,\n  useLayoutEffect,\n  useState,\n  useCallback,\n  useRef,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Loader from '../ReusableComponents/Loader/Loader';\nimport RecipeGalleryItem from '../ReusableComponents/RecipeGalleryItem';\nimport SearchCapImage from '../ReusableComponents/SearchCap';\nimport { showErrorToast } from '../ReusableComponents/ToastCustom/showToast';\nimport Paginator from '../Paginator/PaginatorSearch';\n\nimport {\n  selectRecipeByTitle,\n  selectRecipesByIngredient,\n  selectCurrentPage,\n  selectIsLoading,\n  selectError,\n} from '../../redux/search/searchSelector';\nimport getRecipesByTitle from '../../redux/search/operations/getRecipesByTitle';\nimport {\n  resetRecipeByIngredient,\n  setCurrentPage,\n  resetCurrentPage,\n} from '../../redux/search/searchSlice';\n\nimport { Section, List } from './SearchedRecipesList.styled';\n\nconst SearchedRecipesList = () => {\n  const searchedList = useSelector(selectRecipeByTitle);\n  const serchedIngredList = useSelector(selectRecipesByIngredient);\n  const currentPage = useSelector(selectCurrentPage);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [visibleRecipes, setVisibleRecipes] = useState([]);\n\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const listRef = useRef(null);\n  const itemsPerPage = 6;\n\n  useEffect(() => {\n    if (error) showErrorToast(error);\n  }, [error]);\n\n  useEffect(() => {\n    if (location.state && location.state.from === '/main') {\n      const params = Object.fromEntries(searchParams.entries());\n      const { q } = params;\n      const title = searchParams.get('q');\n      if (q && q !== '') {\n        dispatch(resetCurrentPage());\n        dispatch(resetRecipeByIngredient());\n        dispatch(getRecipesByTitle(title));\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useLayoutEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const visibleRecipeList = useCallback(() => {\n    let visibleList =\n      searchedList?.length > 0 ? searchedList : serchedIngredList?.map(i => i);\n    setVisibleRecipes(visibleList);\n  }, [searchedList, serchedIngredList]);\n\n  useEffect(() => {\n    visibleRecipeList();\n  }, [visibleRecipeList]);\n\n  const handlePageChange = useCallback(\n    pageNumber => {\n      dispatch(setCurrentPage(pageNumber));\n      listRef.current?.scrollIntoView({ behavior: 'smooth' });\n    },\n    [dispatch]\n  );\n\n  const currentPageData = visibleRecipes.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  return (\n    <Section>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {(windowWidth >= 1280 ? visibleRecipes : currentPageData)?.length ||\n          0 ? (\n            <List ref={listRef}>\n              {(windowWidth >= 1280 ? visibleRecipes : currentPageData)\n                .slice(\n                  0,\n                  windowWidth >= 1280\n                    ? 12\n                    : (windowWidth >= 1280 ? visibleRecipes : currentPageData)\n                        .length\n                )\n                .map(({ _id: id, title, preview }) => (\n                  <RecipeGalleryItem\n                    key={id}\n                    id={id}\n                    title={title}\n                    src={preview}\n                  />\n                ))}\n            </List>\n          ) : (\n            <SearchCapImage>Try looking for something else...</SearchCapImage>\n          )}\n          {windowWidth < 1280 && visibleRecipes.length !== 0 && (\n            <Paginator\n              data={visibleRecipes}\n              itemsPerPage={itemsPerPage}\n              onPageChange={handlePageChange}\n            />\n          )}\n        </>\n      )}\n    </Section>\n  );\n};\n\nexport default SearchedRecipesList;\n","import { MainContainer } from 'components/MainContainer/MainContainer';\nimport TitlePage from 'components/ReusableComponents/PageTitle';\nimport SearchBar from 'components/SearchBar';\nimport SearchedRecipesList from 'components/SearchedRecipesList/SearchedRecipesList';\n\nconst SearchPage = title => {\n  return (\n    <MainContainer>\n      <TitlePage title=\"Search\"></TitlePage>\n      <SearchBar />\n      <SearchedRecipesList />\n    </MainContainer>\n  );\n};\n\nexport default SearchPage;\n"],"names":["Title","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","pageTitleColor","_ref2","fontSizes","_ref3","fontWeights","semibold","_ref4","lineHeights","_ref5","_ref6","RectangleFirst","_templateObject2","_ref7","accentColor","RectangleSecond","_templateObject3","Circle","_templateObject4","_ref8","Section","_templateObject5","title","_jsxs","children","_jsx","ImageContainer","Text","selectTextColor","meduim","srcSet","concat","searchCapLarge","searchCapLarge2x","media","searchCapSmall","searchCapSmall2x","src","alt","Input","inputSearchBGColor","borders","inputSearchBorder","primaryTextColor","transforms","transitionDuration","timingFunction","inputSearchBorderHover","_ref9","staticColors","placeholderColor","_ref10","_ref11","_ref12","InputWrapper","ButtonWrapper","_useState","useState","_useState2","_slicedToArray","searchValue","setSearchValue","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","navigate","useNavigate","location","useLocation","selectedOption","useSelector","selectSearchFilter","dispatch","useDispatch","useEffect","state","from","query","get","updateQueryString","useCallback","pathname","q","ing","onSubmit","e","preventDefault","resetCurrentPage","selectOption","params","Object","fromEntries","entries","ingredient","showMessageToast","resetRecipeByIngredient","getRecipesByTitle","then","result","_result$payload$data","_result$payload$data$","payload","code","data","recipe","length","resetRecipeByTitle","getRecipesByIngredient","_result$payload$data2","_result$payload$data3","type","name","value","onChange","trimvalue","target","trim","placeholder","autoComplete","MainButton","nameButton","fontSize","padding","paddingTop","paddingBottom","paddingLeft","paddingRight","cofByMedia768","font","padX","padY","cofByMedia1280","bgColor","hoverStyles","styleFirst","hoverParams","paramFirst","SearchForm","SearchTypeSelector","PaginationStyled","paginatorBGColor","ArrowButton","Icon","iconFillGrey","iconHoverFillGrey","iconDisabledFillGrey","NumberButton","recipeCardDescriptionColor","selected","paginationBgHoverColor","itemsPerPage","onPageChange","visiblePagesCount","setVisiblePagesCount","currentPage","selectCurrentPage","pageCount","Math","ceil","updateVisiblePagesCount","screenWidth","window","innerWidth","addEventListener","removeEventListener","handlePageChange","pageNumber","onClick","disabled","href","sprite","startPage","endPage","paginationItems","pagesBeforeAndAfter","floor","max","push","className","_loop","i","renderPaginationItems","List","searchedList","selectRecipeByTitle","serchedIngredList","selectRecipesByIngredient","isLoading","selectIsLoading","error","selectError","windowWidth","setWindowWidth","_useState3","_useState4","visibleRecipes","setVisibleRecipes","listRef","useRef","showErrorToast","useLayoutEffect","handleResize","visibleRecipeList","visibleList","map","_listRef$current","setCurrentPage","current","scrollIntoView","behavior","currentPageData","slice","Loader","_Fragment","ref","id","_id","preview","RecipeGalleryItem","SearchCapImage","Paginator","MainContainer","TitlePage","SearchBar","SearchedRecipesList"],"sourceRoot":""}